@domain = http://localhost:4000
@AccessToken = {{loginToken.response.body.$.access_token}}
# @AccessToken = "구글 소셜 로그인 테스트 시 이쪽에 토큰 값 입력한 뒤 2번째 줄 주석처리"

###
# 사용자 로그인
# @name loginToken
POST {{domain}}/auth/login
Content-Type: application/json

{
  "email": "jgw987@gmail.com",
  "password": "1234"
}

###
# 학습공간 생성하기 (body에 userId 삭제 -> req.user로 변경)
# 미리 space_class를 만들고 시도하시기 바랍니다.
# 생성 쿼리문 예시 아래에 작성했음
# insert into studycamp.space_class values (1,'vip',100,500000)
# 테스트 함.
# 이상있으면 이정훈 바로 불러주세요.
POST {{domain}}/spaces
Authorization: Bearer {{AccessToken}}
Content-Type: application/json

{
  "name": "wook3",
  "classId": 1,
  "content": "내일배움캠프",
  "password": "1234"
}

###
# 학습공간 삭제하기 (클라이언트에서 삭제할 스페이스의 이름을 입력하면 req.user.id로 소유권자를 확인 후 해당 스페이스 삭제로 변경)
# 테스트 함.
# 이상있으면 이정훈 바로 불러주세요.
DELETE  {{domain}}/spaces
Authorization: Bearer {{AccessToken}}
Content-Type: application/json

{
  "name": "testforme"
}

###
# 모든 학습공간 조회하기
GET {{domain}}/spaces/all
Authorization: Bearer {{AccessToken}}

###
# 내 학습공간 전부 조회하기 (스페이스를 생성한 유저는 해당 스페이스의 권한이 role:0으로 출력, 초대받은 유저는 role:3으로 출력되게 변경)
# 테스트 함.
# 이상있으면 이정훈 바로 불러주세요.
GET {{domain}}/spaces
Authorization: Bearer {{AccessToken}}
Content-Type: application/json

###
# 해당 유저가 스페이스에 속하는지 확인하기
POST  {{domain}}/spaces/check-user
Authorization: Bearer {{AccessToken}}
Content-Type: application/json

{
  "spaceId": 19
}

###
# 학습공간에 유저 초대하기
# 미리 유저를 만들어 주셔야 합니다.
# 응급조치로 아이디를 통해 학습공간에 유저를 초대합니다
# 추후 고칠것입니다.
# 테스트 함.
# 이상있으면 이정훈 바로 불러주세요.
POST {{domain}}/space-members
Authorization: Bearer {{AccessToken}}
Content-Type: application/json

{
  "userId": 4,
  "spaceId":4
}

###
# 학습공간에서 유저 추방하기
# 유저를 학습공간에 미리 넣어 주셔야 합니다.
# 응급조치로 아이디를 통해 학습공간에서 유저를 추방합니다.
# 추후 고칠것입니다.
# 테스트 함.
# 이상있으면 이정훈 바로 불러주세요.
DELETE  {{domain}}/space-members
Authorization: Bearer {{AccessToken}}
Content-Type: application/json

{
  "userId": 1,
  "spaceId": 1
}

###
# 학습공간에서 특정 멤버 정보 조회
POST {{domain}}/space-members/info
Authorization: Bearer {{AccessToken}}
Content-Type: application/json

{
  "spaceId": 1
}

###
# 스페이스 클래스 전체 조회 (타입, 최대수용인원, 가격)
GET {{domain}}/spaces/classes
Authorization: Bearer {{AccessToken}}
Content-Type: application/json

###
# 그룹을 생성합니다.
# 학습공간이 미리 만들어져 있어야 합니다.
# 학습공간을 URL parameter로받습니다.
# 테스트 함.
# 이상있으면 이정훈 바로 불러주세요.
Post {{domain}}/group/4
Authorization: Bearer {{AccessToken}}
Content-Type: application/json

{
  "name": "베이직"
}

###
# 그룹을 삭제합니다.
# 그룹이 미리 만들어져 있어야 합니다.
# 그룹ID를 URL parameter로받습니다.
# 테스트 함.
# 이상있으면 이정훈 바로 불러주세요.
DELETE {{domain}}/group/3
Authorization: Bearer {{AccessToken}}
Content-Type: application/json

###
# 특정 그룹의 모든 방을 조회합니다.
# 그룹이 미리 만들어져 있어야 합니다.
# 학습공간ID를 URL parameter로받습니다.
# 테스트 함.
# 이상있으면 이정훈 바로 불러주세요.
GET {{domain}}/group/3
Authorization: Bearer {{AccessToken}}
Content-Type: application/json

###
# 특정 그룹에 멤버를 추가합니다.
# 그룹이 미리 만들어져 있어야 합니다.
# 이상있으면 이정훈 바로 불러주세요.
# 테스트함.
Post {{domain}}/group-members
Authorization: Bearer {{AccessToken}}
Content-Type: application/json

{
  "groupId": 13,
  "memberId": 46
}

###
# 특정 그룹에 멤버를 삭제합니다.
# 그룹과 멤버가 미리 만들어져 있어야 합니다.
# 테스트함.
# 이상있으면 이정훈 바로 불러주세요.
DELETE {{domain}}/group-members
Authorization: Bearer {{AccessToken}}
Content-Type: application/json

{
  "groupId": 5,
  "memberId": 35
}

###
# 특정 스페이스의 전체 그룹 멤버 조회
GET {{domain}}/group-members/4
Authorization: Bearer {{AccessToken}}

###
# 강의 만들기
# 학습공간이 미리 생성되어 있어야합니다.
# 만드는 순간에는 count가 0이기에 따로 넣지 않습니다.
# 추후 고칠것입니다.
# 테스트 함.
# 이상있으면 이정훈 바로 불러주세요.
POST {{domain}}/lectures
Authorization: Bearer {{AccessToken}}
Content-Type: application/json

{
  "spaceId": 7,
  "title": "테스트 강의"
}

###
# 강의 삭제하기
# 강의가 미리 생성되어 있어야합니다.
# 응급조치로 강의 아이디를 통해 강의를 삭제합니다.
# 추후 고칠것입니다.
# 테스트 함.
# 이상있으면 이정훈 바로 불러주세요.
DELETE {{domain}}/lectures/2
Authorization: Bearer {{AccessToken}}
Content-Type: application/json

###
# 특정 학습공간의 모든 강의 조회하기
# 학습공간과 강의가 미리 생성되어 있어야합니다.
# 추후 고칠것입니다.
# 테스트 함.
# 이상있으면 이정훈 바로 불러주세요.
GET {{domain}}/lectures/4
Authorization: Bearer {{AccessToken}}
Content-Type: application/json

###
# 강의에 강의 영상을 추가합니다.
# 강의가 미리 생성되어 있어야합니다.
# 추후 고칠것입니다.
# 테스트 함.
# 이상있으면 이정훈 바로 불러주세요.
POST {{domain}}/lecture-items
Authorization: Bearer {{AccessToken}}
Content-Type: application/json

{
  "lectureId": 3,
  "title": "testTitle",
  "url": "testURL" 

}

###
# 강의영상 아이디로 강의영상 삭제하기
# 강의영상이 미리 생성되어 있어야합니다.
# 추후 고칠것입니다.
# 테스트 함.
# 이상있으면 이정훈 바로 불러주세요.
DELETE {{domain}}/lecture-items/1
Authorization: Bearer {{AccessToken}}
Content-Type: application/json

###
# 특정 강의의 모든 강의영상 조회하기
# 강의와 강의영상들이 생성되어 있어야 합니다.
# 추후 고칠것입니다.
# 테스트 함.
# 이상있으면 이정훈 바로 불러주세요.
GET {{domain}}/lecture-items
Authorization: Bearer {{AccessToken}}
Content-Type: application/json

{
  "lecture": 3
}

###
# 특정 멤버에게 특정 강의의 강의진도 생성해주기
# 멤버와 강의 두개 모두 생성되어야 합니다.
# 추후 고칠것입니다.
# 테스트 함.
# 이상있으면 이정훈 바로 불러주세요.
POST {{domain}}/lecture-progress
Authorization: Bearer {{AccessToken}}
Content-Type: application/json

{
  "lectureId": 3,
  "memberId": 3,
  "lectureCount": 10
}

###
# 특정 강의진도 업데이트하기
# 강의진도가 생성되어야 합니다.
# 추후 고칠것입니다.
# 테스트 함.
# 이상있으면 이정훈 바로 불러주세요.
PATCH {{domain}}/lecture-progress
Authorization: Bearer {{AccessToken}}
Content-Type: application/json

{
  "lectureProgressId": 1,
  "lectureItemOrder": 3
}

###
GET  {{domain}}/spaces/8
Authorization: Bearer {{AccessToken}}
Content-Type: application/json


# 초대 코드 생성
GET {{domain}}/spaces/invitation/2
Authorization: Bearer {{AccessToken}}

###
# 초대 코드 검증
POST  {{domain}}/spaces/invitation/check
Authorization: Bearer {{AccessToken}}
Content-Type: application/json

{
  "code": "M6V25A"
}

###
# 스페이스 멤버의 역할 변경
PATCH {{domain}}/space-members/change-role
Authorization: Bearer {{AccessToken}}
Content-Type: application/json

{
  "spaceId": 1,
  "targetUserId": 4,
  "newRole": "3"
}

###
# 학습공간에서 전체 멤버 정보 조회
GET {{domain}}/space-members/1
Authorization: Bearer {{AccessToken}}
Content-Type: application/json
